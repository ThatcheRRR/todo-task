{"ast":null,"code":"var _jsxFileName = \"D:\\\\rs-school\\\\todo-task\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport Header from './../Header/Header';\nimport SearchPanel from './../SearchPanel/SearchPanel';\nimport TodoList from './../TodoList/TodoList';\nimport ItemsAddForm from './../ItemsAddForm/ItemsAddForm';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoData: [{\n        id: 1,\n        title: 'Пофлэксить',\n        important: false,\n        done: false\n      }, {\n        id: 2,\n        title: 'Залить соляру',\n        important: false,\n        done: false\n      }, {\n        id: 3,\n        title: 'Не кринжануть',\n        important: false,\n        done: false\n      }],\n      filter: '',\n      add: '',\n      done: this.todoData.filter(item => item.done === true),\n      todo: this.todoData.length - done\n    };\n    this.idGenerator = 4;\n    this.onAddItem = this.onAddItem.bind(this);\n    this.onRemoveItem = this.onRemoveItem.bind(this);\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onImportantSet = this.onImportantSet.bind(this);\n    this.onDoneSet = this.onDoneSet.bind(this);\n  }\n\n  onAddItem(text) {\n    this.setState(({\n      todoData\n    }) => {\n      const newItem = {\n        id: ++this.idGenerator,\n        title: text,\n        important: false,\n        done: false\n      };\n      const newArray = [...todoData, newItem];\n      return {\n        add: '',\n        todoData: newArray\n      };\n    });\n  }\n\n  onRemoveItem(id) {\n    this.setState(({\n      todoData\n    }) => {\n      const idx = todoData.findIndex(item => item.id === id);\n      return {\n        todoData: [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\n      };\n    });\n  }\n\n  setPropFunction(arr, id, propName) {\n    const idx = arr.findIndex(item => item.id === id);\n    const newItem = arr[idx];\n    newItem[propName] = !newItem[propName];\n    return {\n      arr: [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\n    };\n  }\n\n  onImportantSet(id) {\n    this.setState(({\n      todoData\n    }) => {\n      const items = this.setPropFunction(todoData, id, 'important');\n      console.log(items.arr);\n      return {\n        todoData: items.arr\n      };\n    });\n  }\n\n  onDoneSet(id) {\n    this.setState(({\n      todoData\n    }) => {\n      const items = this.setPropFunction(todoData, id, 'done');\n      return {\n        todoData: items.arr\n      };\n    });\n  }\n\n  onNameChange(text) {\n    this.setState({\n      add: text\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      done: this.done,\n      todo: this.todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SearchPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      todoData: this.state.todoData,\n      onRemoveItem: this.onRemoveItem,\n      onDoneSet: this.onDoneSet,\n      onImportantSet: this.onImportantSet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ItemsAddForm, {\n      onAddItem: this.onAddItem,\n      onNameChange: this.onNameChange,\n      add: this.state.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/rs-school/todo-task/src/Components/App/App.js"],"names":["React","Header","SearchPanel","TodoList","ItemsAddForm","App","Component","constructor","props","state","todoData","id","title","important","done","filter","add","item","todo","length","idGenerator","onAddItem","bind","onRemoveItem","onNameChange","onImportantSet","onDoneSet","text","setState","newItem","newArray","idx","findIndex","slice","setPropFunction","arr","propName","items","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE,YAAf;AAA6BC,QAAAA,SAAS,EAAE,KAAxC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OADM,EAEN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE,eAAf;AAAgCC,QAAAA,SAAS,EAAE,KAA3C;AAAkDC,QAAAA,IAAI,EAAE;AAAxD,OAFM,EAGN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE,eAAf;AAAgCC,QAAAA,SAAS,EAAE,KAA3C;AAAkDC,QAAAA,IAAI,EAAE;AAAxD,OAHM,CADD;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,GAAG,EAAE,EAPI;AAQTF,MAAAA,IAAI,EAAE,KAAKJ,QAAL,CAAcK,MAAd,CAAqBE,IAAI,IAAIA,IAAI,CAACH,IAAL,KAAc,IAA3C,CARG;AASTI,MAAAA,IAAI,EAAE,KAAKR,QAAL,CAAcS,MAAd,GAAuBL;AATpB,KAAb;AAWA,SAAKM,WAAL,GAAmB,CAAnB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDD,EAAAA,SAAS,CAACM,IAAD,EAAO;AACZ,SAAKC,QAAL,CAAc,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAkB;AAC5B,YAAMmB,OAAO,GAAG;AACZlB,QAAAA,EAAE,EAAE,EAAE,KAAKS,WADC;AAEZR,QAAAA,KAAK,EAAEe,IAFK;AAGZd,QAAAA,SAAS,EAAE,KAHC;AAIZC,QAAAA,IAAI,EAAE;AAJM,OAAhB;AAMA,YAAMgB,QAAQ,GAAG,CAAC,GAAGpB,QAAJ,EAAcmB,OAAd,CAAjB;AAEA,aAAO;AACHb,QAAAA,GAAG,EAAE,EADF;AAEHN,QAAAA,QAAQ,EAAEoB;AAFP,OAAP;AAIH,KAbD;AAcH;;AAEDP,EAAAA,YAAY,CAACZ,EAAD,EAAK;AACb,SAAKiB,QAAL,CAAc,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAkB;AAC5B,YAAMqB,GAAG,GAAGrB,QAAQ,CAACsB,SAAT,CAAmBf,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAvC,CAAZ;AAEA,aAAO;AACHD,QAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAQ,CAACuB,KAAT,CAAe,CAAf,EAAkBF,GAAlB,CAAJ,EAA4B,GAAGrB,QAAQ,CAACuB,KAAT,CAAeF,GAAG,GAAG,CAArB,CAA/B;AADP,OAAP;AAGH,KAND;AAOH;;AAEDG,EAAAA,eAAe,CAACC,GAAD,EAAMxB,EAAN,EAAUyB,QAAV,EAAoB;AAC/B,UAAML,GAAG,GAAGI,GAAG,CAACH,SAAJ,CAAcf,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAlC,CAAZ;AACA,UAAMkB,OAAO,GAAGM,GAAG,CAACJ,GAAD,CAAnB;AACAF,IAAAA,OAAO,CAACO,QAAD,CAAP,GAAoB,CAACP,OAAO,CAACO,QAAD,CAA5B;AAEA,WAAO;AACHD,MAAAA,GAAG,EAAE,CAAC,GAAGA,GAAG,CAACF,KAAJ,CAAU,CAAV,EAAaF,GAAb,CAAJ,EAAuBF,OAAvB,EAAgC,GAAGM,GAAG,CAACF,KAAJ,CAAUF,GAAG,GAAG,CAAhB,CAAnC;AADF,KAAP;AAGH;;AAEDN,EAAAA,cAAc,CAACd,EAAD,EAAK;AACf,SAAKiB,QAAL,CAAc,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAkB;AAC5B,YAAM2B,KAAK,GAAG,KAAKH,eAAL,CAAqBxB,QAArB,EAA+BC,EAA/B,EAAmC,WAAnC,CAAd;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,GAAlB;AACA,aAAO;AACHzB,QAAAA,QAAQ,EAAE2B,KAAK,CAACF;AADb,OAAP;AAGH,KAND;AAOH;;AAEDT,EAAAA,SAAS,CAACf,EAAD,EAAK;AACV,SAAKiB,QAAL,CAAc,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAkB;AAC5B,YAAM2B,KAAK,GAAG,KAAKH,eAAL,CAAqBxB,QAArB,EAA+BC,EAA/B,EAAmC,MAAnC,CAAd;AACA,aAAO;AACHD,QAAAA,QAAQ,EAAE2B,KAAK,CAACF;AADb,OAAP;AAGH,KALD;AAMH;;AAEDX,EAAAA,YAAY,CAACG,IAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AACVZ,MAAAA,GAAG,EAAEW;AADK,KAAd;AAGH;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAI,KAAK1B,IADjB;AAEI,MAAA,IAAI,EAAI,KAAKI,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAI,KAAKT,KAAL,CAAWC,QAD3B;AAEI,MAAA,YAAY,EAAI,KAAKa,YAFzB;AAGI,MAAA,SAAS,EAAI,KAAKG,SAHtB;AAII,MAAA,cAAc,EAAI,KAAKD,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAYI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAI,KAAKJ,SADtB;AAEI,MAAA,YAAY,EAAI,KAAKG,YAFzB;AAGI,MAAA,GAAG,EAAI,KAAKf,KAAL,CAAWO,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAoBH;;AA1G4C","sourcesContent":["import React from 'react';\r\nimport Header from './../Header/Header';\r\nimport SearchPanel from './../SearchPanel/SearchPanel';\r\nimport TodoList from './../TodoList/TodoList';\r\nimport ItemsAddForm from './../ItemsAddForm/ItemsAddForm';\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todoData: [\r\n                {id: 1, title: 'Пофлэксить', important: false, done: false},\r\n                {id: 2, title: 'Залить соляру', important: false, done: false},\r\n                {id: 3, title: 'Не кринжануть', important: false, done: false}\r\n            ],\r\n            filter: '',\r\n            add: '',\r\n            done: this.todoData.filter(item => item.done === true),\r\n            todo: this.todoData.length - done\r\n        }\r\n        this.idGenerator = 4;\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onRemoveItem = this.onRemoveItem.bind(this);\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onImportantSet = this.onImportantSet.bind(this);\r\n        this.onDoneSet = this.onDoneSet.bind(this);\r\n    }\r\n\r\n    onAddItem(text) {\r\n        this.setState(({ todoData }) => {\r\n            const newItem = {\r\n                id: ++this.idGenerator,\r\n                title: text,\r\n                important: false,\r\n                done: false\r\n            }\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                add: '',\r\n                todoData: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    onRemoveItem(id) {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(item => item.id === id);\r\n\r\n            return {\r\n                todoData: [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            }\r\n        });\r\n    }\r\n\r\n    setPropFunction(arr, id, propName) {\r\n        const idx = arr.findIndex(item => item.id === id);\r\n        const newItem = arr[idx];\r\n        newItem[propName] = !newItem[propName];\r\n\r\n        return {\r\n            arr: [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n        }\r\n    }\r\n\r\n    onImportantSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'important');\r\n            console.log(items.arr)\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onDoneSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'done');\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onNameChange(text) {\r\n        this.setState({\r\n            add: text\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = 'app'>\r\n                <Header \r\n                    done = {this.done}\r\n                    todo = {this.todo}\r\n                />\r\n                <SearchPanel />\r\n                <TodoList \r\n                    todoData = {this.state.todoData}\r\n                    onRemoveItem = {this.onRemoveItem}\r\n                    onDoneSet = {this.onDoneSet}\r\n                    onImportantSet = {this.onImportantSet}\r\n                />\r\n                <ItemsAddForm \r\n                    onAddItem = {this.onAddItem}\r\n                    onNameChange = {this.onNameChange}\r\n                    add = {this.state.add}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}