{"version":3,"sources":["Components/Header/Header.js","Components/SearchPanel/SearchPanel.js","Components/TodoListItem/TodoListItem.js","Components/TodoList/TodoList.js","Components/ItemsAddForm/ItemsAddForm.js","Components/App/App.js","index.js"],"names":["Header","done","todo","SearchPanel","className","type","placeholder","TodoListItem","important","title","onRemoveItem","onImportantSet","onDoneSet","buttonClass","onClick","TodoList","props","todoList","todoData","map","item","key","id","bind","ItemsAddForm","addItem","onValueChange","e","preventDefault","this","add","length","onAddItem","onNameChange","target","value","onSubmit","onChange","React","Component","App","state","filter","idGenerator","text","setState","newItem","idx","findIndex","slice","arr","propName","items","setPropFunction","console","log","ReactDOM","render","document","getElementById"],"mappings":"+UAYeA,MATf,YAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACpB,OACI,gCACI,yCACA,2BAAIA,EAAJ,gBAAuBD,EAAvB,W,MCIGE,MARf,WACI,OACI,0BAAMC,UAAY,gBACd,2BAAOC,KAAO,OAAOC,YAAc,gC,YC2BhCC,MA9Bf,YAA4F,IAApEN,EAAmE,EAAnEA,KAAMO,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,UACtER,EAAY,QACZS,EAAc,OAWlB,OATGZ,IACCG,GAAa,SAGdI,IACCJ,GAAa,aACbS,GAAe,WAIf,4BACI,0BAAMT,UAAaA,EAAWU,QAAWF,GACpCH,GAEL,6BACI,4BAAQL,UAAaS,EAAaC,QAAWH,GACzC,uBAAGP,UAAY,6BAEnB,4BAAQA,UAAY,OAAOU,QAAWJ,GAClC,uBAAGN,UAAY,4BCFpBW,MApBf,SAAkBC,GAAQ,IAAD,OACfC,EAAWD,EAAME,SAASC,KAAI,SAAAC,GAChC,OAAO,kBAAC,EAAD,CACPC,IAAOD,EAAKE,GACZb,MAASW,EAAKX,MACdC,aAAgBM,EAAMN,aAAaa,KAAK,EAAMH,EAAKE,IACnDX,eAAkBK,EAAML,eAAeY,KAAK,EAAMH,EAAKE,IACvDV,UAAaI,EAAMJ,UAAUW,KAAK,EAAMH,EAAKE,IAC7CrB,KAAQmB,EAAKnB,KACbO,UAAaY,EAAKZ,eAItB,OACI,wBAAIJ,UAAY,aACXa,ICcEO,G,wDA5BX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDS,QAAU,EAAKA,QAAQF,KAAb,gBACf,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBAHN,E,oDAMXI,GACJA,EAAEC,iBACEC,KAAKb,MAAMc,IAAIC,QAGnBF,KAAKb,MAAMgB,UAAUH,KAAKb,MAAMc,O,oCAGtBH,GACVE,KAAKb,MAAMiB,aAAaN,EAAEO,OAAOC,S,+BAIjC,OACI,0BAAM/B,UAAY,WAAWgC,SAAYP,KAAKJ,SAC1C,2BAAOpB,KAAO,OAAOC,YAAc,0BAA0B6B,MAASN,KAAKb,MAAMc,IAAKO,SAAYR,KAAKH,gBACvG,4BAAQtB,UAAY,cAApB,iB,GAxBWkC,IAAMC,YCIZC,G,wDAEjB,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTvB,SAAU,CACN,CAACI,GAAI,EAAGb,MAAO,+DAAcD,WAAW,EAAOP,MAAM,GACrD,CAACqB,GAAI,EAAGb,MAAO,4EAAiBD,WAAW,EAAOP,MAAM,GACxD,CAACqB,GAAI,EAAGb,MAAO,4EAAiBD,WAAW,EAAOP,MAAM,IAE5DyC,OAAQ,GACRZ,IAAK,IAET,EAAKa,YAAc,EACnB,EAAKX,UAAY,EAAKA,UAAUT,KAAf,gBACjB,EAAKb,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKU,aAAe,EAAKA,aAAaV,KAAlB,gBACpB,EAAKZ,eAAiB,EAAKA,eAAeY,KAApB,gBACtB,EAAKX,UAAY,EAAKA,UAAUW,KAAf,gBAhBF,E,sDAmBTqB,GAAO,IAAD,OACZf,KAAKgB,UAAS,YAAmB,IAAhB3B,EAAe,EAAfA,SACP4B,EAAU,CACZxB,KAAM,EAAKqB,YACXlC,MAAOmC,EACPpC,WAAW,EACXP,MAAM,GAIV,MAAO,CACH6B,IAAK,GACLZ,SAJU,sBAAOA,GAAP,CAAiB4B,U,mCAS1BxB,GACTO,KAAKgB,UAAS,YAAmB,IAAhB3B,EAAe,EAAfA,SACP6B,EAAM7B,EAAS8B,WAAU,SAAA5B,GAAI,OAAIA,EAAKE,KAAOA,KAEnD,MAAO,CACHJ,SAAS,GAAD,mBAAMA,EAAS+B,MAAM,EAAGF,IAAxB,YAAiC7B,EAAS+B,MAAMF,EAAM,W,sCAK1DG,EAAK5B,EAAI6B,GACrB,IAAMJ,EAAMG,EAAIF,WAAU,SAAA5B,GAAI,OAAIA,EAAKE,KAAOA,KACxCwB,EAAUI,EAAIH,GAGpB,OAFAD,EAAQK,IAAaL,EAAQK,GAEtB,CACHD,IAAI,GAAD,mBAAMA,EAAID,MAAM,EAAGF,IAAnB,CAAyBD,GAAzB,YAAqCI,EAAID,MAAMF,EAAM,Q,qCAIjDzB,GAAK,IAAD,OACfO,KAAKgB,UAAS,YAAmB,IAAhB3B,EAAe,EAAfA,SACPkC,EAAQ,EAAKC,gBAAgBnC,EAAUI,EAAI,aAEjD,OADAgC,QAAQC,IAAIH,EAAMF,KACX,CACHhC,SAAUkC,EAAMF,U,gCAKlB5B,GAAK,IAAD,OACVO,KAAKgB,UAAS,YAAmB,IAAhB3B,EAAe,EAAfA,SAEb,MAAO,CACHA,SAFU,EAAKmC,gBAAgBnC,EAAUI,EAAI,QAE7B4B,U,mCAKfN,GACTf,KAAKgB,SAAS,CACVf,IAAKc,M,+BAKT,IAAM3C,EAAO4B,KAAKY,MAAMvB,SAASwB,QAAO,SAAAtB,GAAI,OAAIA,EAAKnB,QAAM8B,OACrD7B,EAAO2B,KAAKY,MAAMvB,SAASa,OAAS9B,EAC1C,OACI,yBAAKG,UAAY,OACb,kBAAC,EAAD,CACIH,KAAQA,EACRC,KAAQA,IAEZ,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIgB,SAAYW,KAAKY,MAAMvB,SACvBR,aAAgBmB,KAAKnB,aACrBE,UAAaiB,KAAKjB,UAClBD,eAAkBkB,KAAKlB,iBAE3B,kBAAC,EAAD,CACIqB,UAAaH,KAAKG,UAClBC,aAAgBJ,KAAKI,aACrBH,IAAOD,KAAKY,MAAMX,W,GAtGLQ,IAAMC,YCHvCiB,IAASC,OACP,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d3f943a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({ done, todo }) {\r\n    return(\r\n        <header>\r\n            <h1>Todo List</h1>\r\n            <p>{todo} more to do, {done} done</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SearchPanel.css';\r\n\r\nfunction SearchPanel() {\r\n    return(\r\n        <form className = 'search-panel'>\r\n            <input type = 'text' placeholder = 'What do you need to find?' />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './TodoListItem.css';\r\n\r\nfunction TodoListItem({ done, important, title, onRemoveItem, onImportantSet, onDoneSet }) {\r\n    let className = 'title';\r\n    let buttonClass = 'icon';\r\n\r\n    if(done) {\r\n        className += ' done';\r\n    }\r\n\r\n    if(important) {\r\n        className += ' important';\r\n        buttonClass += ' active';\r\n    }\r\n\r\n    return(\r\n        <li>\r\n            <span className = {className} onClick = {onDoneSet}>\r\n                {title}\r\n            </span>\r\n            <div>\r\n                <button className = {buttonClass} onClick = {onImportantSet}>\r\n                    <i className = 'fa fa-exclamation fa-2x'></i>\r\n                </button>\r\n                <button className = 'icon' onClick = {onRemoveItem}>\r\n                    <i className = 'fa fa-trash-o fa-2x'></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport './TodoList.css';\r\nimport TodoListItem from './../TodoListItem/TodoListItem.js';\r\n\r\nfunction TodoList(props) {\r\n    const todoList = props.todoData.map(item => {\r\n        return <TodoListItem \r\n        key = {item.id} \r\n        title = {item.title} \r\n        onRemoveItem = {props.onRemoveItem.bind(this, item.id)}\r\n        onImportantSet = {props.onImportantSet.bind(this, item.id)}\r\n        onDoneSet = {props.onDoneSet.bind(this, item.id)}\r\n        done = {item.done}\r\n        important = {item.important}\r\n        />\r\n    });\r\n\r\n    return(\r\n        <ul className = 'todo-list'>\r\n            {todoList}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './ItemsAddForm.css';\r\n\r\nclass ItemsAddForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n    }\r\n\r\n    addItem(e) {\r\n        e.preventDefault();\r\n        if(!this.props.add.length) {\r\n            return;\r\n        }\r\n        this.props.onAddItem(this.props.add);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.props.onNameChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className = 'add-form' onSubmit = {this.addItem}>\r\n                <input type = 'text' placeholder = 'What do you need to do?' value = {this.props.add} onChange = {this.onValueChange} />\r\n                <button className = 'add-button'>Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsAddForm;","import React from 'react';\r\nimport Header from './../Header/Header';\r\nimport SearchPanel from './../SearchPanel/SearchPanel';\r\nimport TodoList from './../TodoList/TodoList';\r\nimport ItemsAddForm from './../ItemsAddForm/ItemsAddForm';\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todoData: [\r\n                {id: 1, title: 'Пофлэксить', important: false, done: false},\r\n                {id: 2, title: 'Залить соляру', important: false, done: false},\r\n                {id: 3, title: 'Не кринжануть', important: false, done: false}\r\n            ],\r\n            filter: '',\r\n            add: '',\r\n        }\r\n        this.idGenerator = 4;\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onRemoveItem = this.onRemoveItem.bind(this);\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onImportantSet = this.onImportantSet.bind(this);\r\n        this.onDoneSet = this.onDoneSet.bind(this);\r\n    }\r\n\r\n    onAddItem(text) {\r\n        this.setState(({ todoData }) => {\r\n            const newItem = {\r\n                id: ++this.idGenerator,\r\n                title: text,\r\n                important: false,\r\n                done: false\r\n            }\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                add: '',\r\n                todoData: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    onRemoveItem(id) {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(item => item.id === id);\r\n\r\n            return {\r\n                todoData: [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            }\r\n        });\r\n    }\r\n\r\n    setPropFunction(arr, id, propName) {\r\n        const idx = arr.findIndex(item => item.id === id);\r\n        const newItem = arr[idx];\r\n        newItem[propName] = !newItem[propName];\r\n\r\n        return {\r\n            arr: [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n        }\r\n    }\r\n\r\n    onImportantSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'important');\r\n            console.log(items.arr)\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onDoneSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'done');\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onNameChange(text) {\r\n        this.setState({\r\n            add: text\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const done = this.state.todoData.filter(item => item.done).length;\r\n        const todo = this.state.todoData.length - done;\r\n        return(\r\n            <div className = 'app'>\r\n                <Header \r\n                    done = {done}\r\n                    todo = {todo}\r\n                />\r\n                <SearchPanel />\r\n                <TodoList \r\n                    todoData = {this.state.todoData}\r\n                    onRemoveItem = {this.onRemoveItem}\r\n                    onDoneSet = {this.onDoneSet}\r\n                    onImportantSet = {this.onImportantSet}\r\n                />\r\n                <ItemsAddForm \r\n                    onAddItem = {this.onAddItem}\r\n                    onNameChange = {this.onNameChange}\r\n                    add = {this.state.add}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App.js';\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}