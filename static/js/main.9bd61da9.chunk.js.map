{"version":3,"sources":["Components/Header/Header.js","Components/SearchPanel/SearchPanel.js","Components/TodoListItem/TodoListItem.js","Components/TodoList/TodoList.js","Components/ItemsAddForm/ItemsAddForm.js","Components/App/App.js","index.js"],"names":["Header","done","todo","SearchPanel","props","onType","bind","e","this","onSearch","target","value","className","type","placeholder","onChange","filter","React","Component","TodoListItem","important","title","onRemoveItem","onImportantSet","onDoneSet","buttonClass","onClick","TodoList","todoList","todoData","map","item","key","id","ItemsAddForm","addItem","onValueChange","preventDefault","add","length","onAddItem","onNameChange","onSubmit","App","state","idGenerator","searchItems","text","setState","newItem","idx","findIndex","slice","arr","propName","items","setPropFunction","console","log","indexOf","itemsForSearch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bd61da9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({ done, todo }) {\r\n    return(\r\n        <header>\r\n            <h1>Todo List</h1>\r\n            <p>{todo} more to do, {done} done</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SearchPanel.css';\r\n\r\nclass SearchPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onType = this.onType.bind(this);\r\n    }\r\n    \r\n    onType(e) {\r\n        this.props.onSearch(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className = 'search-panel'>\r\n                <input type = 'text' placeholder = 'What do you need to find?' onChange = {this.onType} value = {this.props.filter} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './TodoListItem.css';\r\n\r\nfunction TodoListItem({ done, important, title, onRemoveItem, onImportantSet, onDoneSet }) {\r\n    let className = 'title';\r\n    let buttonClass = 'icon';\r\n\r\n    if(done) {\r\n        className += ' done';\r\n    }\r\n\r\n    if(important) {\r\n        className += ' important';\r\n        buttonClass += ' active';\r\n    }\r\n\r\n    return(\r\n        <li>\r\n            <span className = {className} onClick = {onDoneSet}>\r\n                {title}\r\n            </span>\r\n            <div>\r\n                <button className = {buttonClass} onClick = {onImportantSet}>\r\n                    <i className = 'fa fa-exclamation fa-2x'></i>\r\n                </button>\r\n                <button className = 'icon' onClick = {onRemoveItem}>\r\n                    <i className = 'fa fa-trash-o fa-2x'></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport './TodoList.css';\r\nimport TodoListItem from './../TodoListItem/TodoListItem.js';\r\n\r\nfunction TodoList(props) {\r\n    const todoList = props.todoData.map(item => {\r\n        return <TodoListItem \r\n        key = {item.id} \r\n        title = {item.title} \r\n        onRemoveItem = {props.onRemoveItem.bind(this, item.id)}\r\n        onImportantSet = {props.onImportantSet.bind(this, item.id)}\r\n        onDoneSet = {props.onDoneSet.bind(this, item.id)}\r\n        done = {item.done}\r\n        important = {item.important}\r\n        />\r\n    });\r\n\r\n    return(\r\n        <ul className = 'todo-list'>\r\n            {todoList}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './ItemsAddForm.css';\r\n\r\nclass ItemsAddForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n    }\r\n\r\n    addItem(e) {\r\n        e.preventDefault();\r\n        if(!this.props.add.length) {\r\n            return;\r\n        }\r\n        this.props.onAddItem(this.props.add);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.props.onNameChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form className = 'add-form' onSubmit = {this.addItem}>\r\n                <input type = 'text' placeholder = 'What do you need to do?' value = {this.props.add} onChange = {this.onValueChange} />\r\n                <button className = 'add-button'>Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsAddForm;","import React from 'react';\r\nimport Header from './../Header/Header';\r\nimport SearchPanel from './../SearchPanel/SearchPanel';\r\nimport TodoList from './../TodoList/TodoList';\r\nimport ItemsAddForm from './../ItemsAddForm/ItemsAddForm';\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todoData: [\r\n                {id: 1, title: 'Пофлэксить', important: false, done: false},\r\n                {id: 2, title: 'Залить соляру', important: false, done: false},\r\n                {id: 3, title: 'Не кринжануть', important: false, done: false}\r\n            ],\r\n            filter: '',\r\n            add: '',\r\n        }\r\n        this.idGenerator = 4;\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n        this.onRemoveItem = this.onRemoveItem.bind(this);\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onImportantSet = this.onImportantSet.bind(this);\r\n        this.onDoneSet = this.onDoneSet.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.searchItems = this.searchItems.bind(this);\r\n    }\r\n\r\n    onAddItem(text) {\r\n        this.setState(({ todoData }) => {\r\n            const newItem = {\r\n                id: ++this.idGenerator,\r\n                title: text,\r\n                important: false,\r\n                done: false\r\n            }\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                add: '',\r\n                todoData: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    onRemoveItem(id) {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(item => item.id === id);\r\n\r\n            return {\r\n                todoData: [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            }\r\n        });\r\n    }\r\n\r\n    setPropFunction(arr, id, propName) {\r\n        const idx = arr.findIndex(item => item.id === id);\r\n        const newItem = arr[idx];\r\n        newItem[propName] = !newItem[propName];\r\n\r\n        return {\r\n            arr: [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n        }\r\n    }\r\n\r\n    onImportantSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'important');\r\n            console.log(items.arr)\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onDoneSet(id) {\r\n        this.setState(({ todoData }) => {\r\n            const items = this.setPropFunction(todoData, id, 'done');\r\n            return {\r\n                todoData: items.arr\r\n            }\r\n        });\r\n    }\r\n\r\n    onNameChange(text) {\r\n        this.setState({\r\n            add: text\r\n        });\r\n    }\r\n\r\n    onSearch(text) {\r\n        this.setState({\r\n            filter: text\r\n        });\r\n    }\r\n\r\n    searchItems(arr, text) {\r\n        if(text.length === 0) {\r\n            return arr;\r\n        }\r\n\r\n        return arr.filter(item => item.title.indexOf(text) > -1);\r\n    }\r\n\r\n    render() {\r\n        const done = this.state.todoData.filter(item => item.done).length;\r\n        const todo = this.state.todoData.length - done;\r\n        const itemsForSearch = this.searchItems(this.state.todoData, this.state.filter);\r\n        return(\r\n            <div className = 'app'>\r\n                <Header \r\n                    done = {done}\r\n                    todo = {todo}\r\n                />\r\n                <SearchPanel \r\n                    onSearch = {this.onSearch}\r\n                    filter = {this.state.filter}\r\n                />\r\n                <TodoList \r\n                    todoData = {itemsForSearch}\r\n                    onRemoveItem = {this.onRemoveItem}\r\n                    onDoneSet = {this.onDoneSet}\r\n                    onImportantSet = {this.onImportantSet}\r\n                />\r\n                <ItemsAddForm \r\n                    onAddItem = {this.onAddItem}\r\n                    onNameChange = {this.onNameChange}\r\n                    add = {this.state.add}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App.js';\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}